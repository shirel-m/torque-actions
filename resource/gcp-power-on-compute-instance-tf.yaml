- name: Start GCP vm
  hosts: localhost
  connection: local

  collections:
    - google.cloud

  vars:
    service_account_file: "{{ lookup('env', 'GOOGLE_APPLICATION_CREDENTIALS') }}"
    has_service_account_file: "{{ service_account_file | length > 0 and service_account_file is file }}"
    auth_kind: ""

  tasks:
    - name: Start the GCP vm using service account file
      google.cloud.gcp_compute_instance:
        auth_kind: serviceaccount
        service_account_file: "{{ service_account_file }}"
        project: "{{ project }}"
        zone: "{{ zone }}"
        name: "{{ name }}"
        status: RUNNING
      when: has_service_account_file
      register: result
      ignore_errors: yes
    
    - name: Set auth_kind to serviceaccount if successful
      set_fact:
        auth_kind: serviceaccount
      when: result is defined and result.failed == false and has_service_account_file
    
    - name: Start the GCP vm using Workload Identity Federation
      google.cloud.gcp_compute_instance:
        auth_kind: application
        project: "{{ project }}"
        zone: "{{ zone }}"
        name: "{{ name }}"
        status: RUNNING
      when: not has_service_account_file or result.failed
      register: result
      ignore_errors: yes
    
    - name: Set auth_kind to application if successful
      set_fact:
        auth_kind: application
      when: result is defined and result.failed == false and auth_kind != "serviceaccount"
    
    - name: Start the GCP vm using machine account (last fallback)
      google.cloud.gcp_compute_instance:
        auth_kind: machineaccount
        project: "{{ project }}"
        zone: "{{ zone }}"
        name: "{{ name }}"
        status: RUNNING
      when: result.failed
      register: result
    
    - name: Set auth_kind to machineaccount if successful
      set_fact:
        auth_kind: machineaccount
      when: result is defined and result.failed == false and auth_kind != "serviceaccount" and auth_kind != "application"
      
    - name: gather information about the vm instance
      google.cloud.gcp_compute_instance_info:
        auth_kind: "{{ auth_kind }}"
        service_account_file: "{{ service_account_file if result.auth_kind == 'serviceaccount' else omit }}"
        project: "{{ project }}"
        zone: "{{ zone }}"
        filters:
          - "name={{ name }}"
      register: vm_info
      
    - copy:
        content: "{{ vm_info }}"
        dest: qtorque_outputs.json
